AWSTemplateFormatVersion: "2010-09-09"

Description: >
  This is template create the cluster K8S


Parameters:
  SystemCode:
    Type: String
    Default: quytn7
  EnvironmentCode:
    Type: String
    Default: udacity
  Subnet01:
    Type: String
    Default: subnet-01a646e83cdbd7f43
  Subnet02:
    Type: String
    Default: subnet-02eb31e674d8aad27
  Subnet03:
    Type: String
    Default: subnet-0b737f81edb370700
  Subnet04:
    Type: String
    Default: subnet-0fe0cab8d3a8e6119
  SecurityGroupId:
    Type: String
    Default: sg-0be7d91fac842b6c9

Resources:
  K8SClusterRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - eks.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
           - "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"

  K8SCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: quytn7
      Version: "1.27"
      ResourcesVpcConfig:
        SecurityGroupIds:
             - !Ref SecurityGroupId
        SubnetIds:
          - !Ref Subnet01
          - !Ref Subnet02
          - !Ref Subnet03
          - !Ref Subnet04
        EndpointPublicAccess: true
        PublicAccessCidrs:
             - "0.0.0.0/0"
      RoleArn: !GetAtt K8SClusterRole.Arn
      Tags:
           - Key: Name
             Value: !Sub ${SystemCode}-${EnvironmentCode}-cluster-01
Outputs:
  K8sClusterRoleArn:
    Description: export role k8s
    Value: !GetAtt K8SClusterRole.Arn
    Export:
      Name: !Sub ${SystemCode}-${EnvironmentCode}-cluster-role-01
  K8sClusterName:
    Description: Name Cluster
    Value: !Ref K8SCluster

